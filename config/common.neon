includes:
    - services.neon
    - nettrine.neon

di:
	debugger: true

tracy:
	logSeverity: E_ALL
	strictMode: yes

extensions:
    middlewares: Contributte\Middlewares\DI\MiddlewaresExtension
    resource: Contributte\DI\Extension\ResourceExtension
    api: Apitte\Core\DI\ApiExtension

resource:
    resources:
        App\Controller\:
            paths: [%appDir%/Controller]
api:
    debug: %debugMode%
    catchException: true # Sets if exception should be catched and transformed into response or rethrown to output (debug only)
    plugins:
        Apitte\Middlewares\DI\MiddlewaresPlugin:
            tracy: true
            autobasepath: true
        Apitte\Debug\DI\DebugPlugin:
            debug:
                panel: %debugMode%
                negotiation: %debugMode%

services:
    - App\Controller\Public\WorkerPublicController
    - App\Controller\Public\UzivatelePublicController
    - App\Controller\Public\LinksPublicController
    - App\Controller\Public\KategoriePublicController
    - App\Controller\Public\ImagesPublicController
    - App\Controller\Public\DostupnostPublicController
    - App\Controller\Public\ClankyPublicController
    - App\Controller\Lock\WorkerLockController
    - App\Controller\Lock\UzivateleLockController
    - App\Controller\Lock\LinksLockController
    - App\Controller\Lock\KategorieLockController
    - App\Controller\Lock\ImagesLockController
    - App\Controller\Lock\DostupnostLockController
    - App\Controller\Lock\ClankyLockController

    middleware.cors:
        factory: App\Middleware\CORSMiddleware
        tags: [middleware: [priority: 200]]
    middleware.authenticator:
        factory: App\Middleware\AuthenticationMiddleware(
            App\Security\TokenAuthenticator()
        )
        tags: [middleware: [priority: 250]]
    api.core.dispatcher: App\Dispatcher\JsonDispatcher
